import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Save, RotateCcw, FileText, MessageCircle, Eye } from "lucide-react";
import { useNavigation } from "@/hooks/useNavigation";
import { useToast } from "@/hooks/use-toast";

export function NavigationEditor() {
  const {
    navigationPages,
    updateNavigationPage,
    saveNavigationPages,
    resetToDefaults,
  } = useNavigation();

  const { toast } = useToast();
  const [success, setSuccess] = useState("");
  const [previewId, setPreviewId] = useState<string | null>(null);

  const handleSave = () => {
    saveNavigationPages();
    setSuccess("–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
    toast({
      title: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
      description: "–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
    });
    setTimeout(() => setSuccess(""), 3000);
  };

  const handleReset = () => {
    resetToDefaults();
    setSuccess("–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é!");
    toast({
      title: "–°–±—Ä–æ—à–µ–Ω–æ",
      description: "–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é",
    });
    setTimeout(() => setSuccess(""), 3000);
  };

  const getIcon = (pageId: string) => {
    switch (pageId) {
      case "details":
        return <FileText className="w-4 h-4" />;
      case "contacts":
        return <MessageCircle className="w-4 h-4" />;
      default:
        return <FileText className="w-4 h-4" />;
    }
  };

  const renderContentPreview = (content: string) => {
    return content
      .split("\n")
      .slice(0, 5)
      .map((line, index) => {
        if (line.startsWith("# ")) {
          return (
            <h4 key={index} className="font-semibold text-neutral-900 mb-2">
              {line.substring(2)}
            </h4>
          );
        }
        if (line.startsWith("## ")) {
          return (
            <h5 key={index} className="font-medium text-neutral-800 mb-1">
              {line.substring(3)}
            </h5>
          );
        }
        if (line.trim() === "") {
          return <div key={index} className="mb-1" />;
        }
        return (
          <p key={index} className="text-sm text-neutral-600 mb-1">
            {line.length > 80 ? line.substring(0, 80) + "..." : line}
          </p>
        );
      });
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h2 className="text-xl font-semibold text-neutral-900">
            –†–µ–¥–∞–∫—Ç–æ—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
          </h2>
          <p className="text-sm text-neutral-600 mt-1">
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü "–î–µ—Ç–∞–ª–∏" –∏ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
          </p>
        </div>

        <div className="flex gap-3">
          <Button variant="outline" onClick={handleReset} size="sm">
            <RotateCcw className="w-4 h-4 mr-2" />
            –°–±—Ä–æ—Å–∏—Ç—å
          </Button>
          <Button onClick={handleSave} size="sm">
            <Save className="w-4 h-4 mr-2" />
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
          </Button>
        </div>
      </div>

      {success && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-3">
          <p className="text-sm text-green-800">{success}</p>
        </div>
      )}

      <div className="grid grid-cols-1 gap-6">
        {navigationPages
          .filter((page) => page.isEditable)
          .map((page) => (
            <Card key={page.id}>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  {getIcon(page.id)}
                  –°—Ç—Ä–∞–Ω–∏—Ü–∞ "{page.title}"
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() =>
                      setPreviewId(previewId === page.id ? null : page.id)
                    }
                  >
                    <Eye className="w-4 h-4" />
                  </Button>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-neutral-700">
                      –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    </Label>
                    <Input
                      value={page.title}
                      onChange={(e) =>
                        updateNavigationPage(page.id, { title: e.target.value })
                      }
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫"
                      className="mt-1"
                    />
                  </div>

                  <div>
                    <Label className="text-sm font-medium text-neutral-700">
                      –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    </Label>
                    <p className="text-xs text-neutral-500 mb-2">
                      –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞: # –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, ## –¥–ª—è
                      –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, **—Ç–µ–∫—Å—Ç** –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è, - –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
                    </p>
                    <Textarea
                      value={page.content}
                      onChange={(e) =>
                        updateNavigationPage(page.id, {
                          content: e.target.value,
                        })
                      }
                      placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
                      className="min-h-[300px] font-mono text-sm"
                    />
                  </div>
                </div>

                {previewId === page.id && (
                  <div className="border-t pt-4">
                    <Label className="text-sm font-medium text-neutral-700 mb-2 block">
                      –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                    </Label>
                    <div className="bg-neutral-50 border border-neutral-200 rounded-lg p-4 max-h-48 overflow-y-auto">
                      {renderContentPreview(page.content)}
                      {page.content.split("\n").length > 5 && (
                        <p className="text-xs text-neutral-400 mt-2">
                          ... –∏ –µ—â–µ {page.content.split("\n").length - 5} —Å—Ç—Ä–æ–∫
                        </p>
                      )}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          ))}
      </div>

      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h3 className="font-medium text-blue-900 mb-2">
          üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:
        </h3>
        <ul className="text-sm text-blue-800 space-y-1">
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ # –¥–ª—è –≥–ª–∞–≤–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤</li>
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ## –¥–ª—è –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤</li>
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ### –¥–ª—è –º–µ–ª–∫–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤</li>
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **—Ç–µ–∫—Å—Ç** –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∂–∏—Ä–Ω—ã–º</li>
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ - –¥–ª—è –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤</li>
          <li>‚Ä¢ –û—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É –∞–±–∑–∞—Ü–∞–º–∏</li>
        </ul>
      </div>
    </div>
  );
}
